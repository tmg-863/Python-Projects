# -*- coding:utf-8 -*-

#This script was used to wipe pre-existing data of the same name, then 
#scrape/download and pre-process multiple agencies GTFS network data, from an open-source transit data website;
#the website was really cool but I think it shut down, RIP. 
#After pre-processing the data with an ArcGIS arcpy library, bus network geoprocessing framework,
#the files are then converted to geodata shapefiles.

import arcpy
from arcpy import env
import os
import os.path

arcpy.env.workspace= "D:/ATL_TRANSIT/ATL_TRANSIT/"

#Remove old geodatabases

arcpy.Delete_management("D:/ATL_TRANSIT/ATL_TRANSIT/MARTA_BUS.gdb")

arcpy.Delete_management("D:/ATL_TRANSIT/ATL_TRANSIT/MARTA_RAIL.gdb")

arcpy.Delete_management("D:/ATL_TRANSIT/ATL_TRANSIT/STREETCAR.gdb")

arcpy.Delete_management("D:/ATL_TRANSIT/ATL_TRANSIT/CCT.gdb")

arcpy.Delete_management("D:/ATL_TRANSIT/ATL_TRANSIT/GCT.gdb")

#Remove old SQL Files

if os.path.exists('D:/ATL_TRANSIT/ATL_TRANSIT/MARTA_BUS.sql'):
    os.remove('D:/ATL_TRANSIT/ATL_TRANSIT/MARTA_BUS.sql')

if os.path.exists('D:/ATL_TRANSIT/ATL_TRANSIT/MARTA_RAIL.sql'):
    os.remove('D:/ATL_TRANSIT/ATL_TRANSIT/MARTA_RAIL.sql')

if os.path.exists('D:/ATL_TRANSIT/ATL_TRANSIT/GCT.sql'):
    os.remove('D:/ATL_TRANSIT/ATL_TRANSIT/GCT.sql') 
    
if os.path.exists('D:/ATL_TRANSIT/ATL_TRANSIT/CCT.sql'):
    os.remove('D:/ATL_TRANSIT/ATL_TRANSIT/CCT.sql')

if os.path.exists('D:/ATL_TRANSIT/ATL_TRANSIT/STREETCAR.sql'):
    os.remove('D:/ATL_TRANSIT/ATL_TRANSIT/STREETCAR.sql')

#Remove old shapefiles generated by deleting entire ATL_TRANSIT Folder and contents

if arcpy.Exists(r"D:/ATL_TRANSIT/ATL_TRANSIT"):
    arcpy.Delete_management("D:/ATL_TRANSIT/ATL_TRANSIT")

env.workspace = "D:/ATL_TRANSIT/ATL_TRANSIT/"

#Remove outdated GTFS data

#delete old MARTA data
if arcpy.Exists(r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs"):
    arcpy.Delete_management("D:/ATL_TRANSIT/ATL_TRANSIT/gtfs")

#delete old streetcar data
if arcpy.Exists(r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(1)"):
    arcpy.Delete_management("D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(1)")

#delete old CCT data
if arcpy.Exists(r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(2)"):
    arcpy.Delete_management("D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(2)")

#delete old GCT data
if arcpy.Exists(r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(3)"):
    arcpy.Delete_management("D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(3)")

#Make a new ATL_TRANSIT Folder in Documents

newpath = "D:/ATL_TRANSIT/ATL_TRANSIT"

#url downloader
from urllib import urlretrieve
import zipfile

class Urldownloader:
    """
    Downloads the network objected denoted by the url named as object variable, "pointing_to"
    """
    def __init__(self):
        self.pointing_to = None
        self.file_path_with_name = None
        self.info_tuple = None  # will contain tuple: (local file name under which object can be found,
        # meta-information of the page, such as headers)

    def set_url_and_path(self, input_url, output_path_file_name=None):
        """
        Sets the input url and output file name + path
        :param input_url: Url pointing towards the object you want to download
        :param output_path_file_name: Path along with the file name of output file
        :return: None
        """

        self.pointing_to = input_url  # Setting the input url

        # Setting the output path
        if output_path_file_name is None and self.file_path_with_name is None:  # If output path is neither pre-stored
            # in the object nor specified in the function call.
            raise ValueError("Output file path is not specified.")
        elif output_path_file_name is None and self.file_path_with_name is not None:  # If output path is not specifed
            # in the function call but a pre-stored value exists.
            pass
        else:  # If output file path is specifed
            self.file_path_with_name = output_path_file_name

    def retrieve_file(self):
        """
        Downloads the network objects which your input url is pointing to at you putput file path
        :return: None
        """
        self.info_tuple = urlretrieve(self.pointing_to, self.file_path_with_name)

    @staticmethod
    def unzip_it(input_file_path, output_folder):
        """
        Unzips a given file
        :param input_file_path: input file path, type: str
        :param output_folder: output folder path, type: str
        :return: None
        """
        pointer_to_file_to_be_unzipped = zipfile.ZipFile(input_file_path)
        pointer_to_file_to_be_unzipped.extractall(output_folder)

#Latest MARTA GTFS download
my_url_downloader = Urldownloader()
my_url_downloader.set_url_and_path("https://transitfeeds.com/p/marta/65/latest/download",
                                   r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs.zip")
my_url_downloader.retrieve_file()
my_url_downloader.unzip_it(r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs.zip", r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs")

#Latest Atlanta Streetcar GTFS download
my_url_downloader = Urldownloader()
my_url_downloader.set_url_and_path("https://transitfeeds.com/p/city-of-atlanta/424/latest/download",
                                   r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(1).zip")
my_url_downloader.retrieve_file()
my_url_downloader.unzip_it(r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(1).zip", r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(1)")

#Latest CCT GTFS download
my_url_downloader.set_url_and_path("https://transitfeeds.com/p/cobb-community-transit/372/latest/download",
                                   r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(2).zip")
my_url_downloader.retrieve_file()
my_url_downloader.unzip_it(r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(2).zip", r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(2)")

#Latest GCT GTFS download
my_url_downloader.set_url_and_path("https://transitfeeds.com/p/gwinnett-county-transit/862/latest/download",
                                   r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(3).zip")
my_url_downloader.retrieve_file()
my_url_downloader.unzip_it(r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(3).zip", r"D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(3)")

#Set workspace back 
env.workspace= "D:/ATL_TRANSIT/ATL_TRANSIT/"

#PRE-PROCESS GTFS

# Load required toolboxes
arcpy.ImportToolbox("C:/Users/taylo/Downloads/BetterBusBuffers/BetterBusBuffers_0.13.0.2/BetterBusBuffers.pyt")

#MARTA BUS
# Local variables:
gtfs = "D:/ATL_TRANSIT/ATL_TRANSIT/gtfs"
MARTA_BUS_sql = "D:/ATL_TRANSIT/ATL_TRANSIT/MARTA_BUS.sql"

# Process: Preprocess GTFS
arcpy.PreprocessGTFS_BetterBusBuffers("D:/ATL_TRANSIT/ATL_TRANSIT/gtfs", MARTA_BUS_sql)

#MARTA RAIL
# Local variables:
gtfs_0 = "D:/ATL_TRANSIT/ATL_TRANSIT/gtfs"
MARTA_BUS_sql = "D:/ATL_TRANSIT/ATL_TRANSIT/MARTA_RAIL.sql"

# Process: Preprocess GTFS
arcpy.PreprocessGTFS_BetterBusBuffers("D:/ATL_TRANSIT/ATL_TRANSIT/gtfs", MARTA_RAIL_sql)

#ATLANTA STREETCAR
# Local variables:
gtfs_1 = "D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(1)"
MARTA_BUS_sql = "D:/ATL_TRANSIT/ATL_TRANSIT/STREETCAR.sql"

# Process: Preprocess GTFS
arcpy.PreprocessGTFS_BetterBusBuffers("D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(1)", STREETCAR_sql)

#CCT
# Local variables:
gtfs_1 = "D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(2)"
MARTA_BUS_sql = "D:/ATL_TRANSIT/ATL_TRANSIT/CCT.sql"

# Process: Preprocess GTFS
arcpy.PreprocessGTFS_BetterBusBuffers("D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(2)", CCT_sql)

#GCT
# Local variables:
gtfs_1 = "D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(3)"
MARTA_BUS_sql = "D:/ATL_TRANSIT/ATL_TRANSIT/GCT.sql"

# Process: Preprocess GTFS
arcpy.PreprocessGTFS_BetterBusBuffers("D:/ATL_TRANSIT/ATL_TRANSIT/gtfs(3)", GCT_sql) 

#-------------------------------------------------------------------------------------------------------------------------------------------------------------- 



#FOR MARTA BUS STOPS
env.workspace= "C:\Users\Taylor Gibbs\Documents\MARTA_BUS_STOPS.gdb"
arcpy.FeatureClassToShapefile_conversion(["MARTA_BUS_STOPS_0600_0900","MARTA_BUS_STOPS_0900_1600","MARTA_BUS_STOPS_1600_1900","MARTA_BUS_STOPS_1900_2400"],"C:\Users\Taylor Gibbs\Documents\ATL_TRANSIT")

#FOR MARTA TRAIN STOPS
env.workspace= "C:\Users\Taylor Gibbs\Documents\MARTA_TRAIN_STOPS.gdb"
arcpy.FeatureClassToShapefile_conversion(["MARTA_TRAIN_STOPS_0600_0900", "MARTA_TRAIN_STOPS_0900_1600","MARTA_TRAIN_STOPS_1600_1900","MARTA_TRAIN_STOPS_1900_2400"],"C:\Users\Taylor Gibbs\Documents\ATL_TRANSIT")

#FOR MARTA BUS AND TRAIN POLYGONS
env.workspace= "C:\Users\Taylor Gibbs\Documents\MARTA_BUS_TRAIN_POLYGONS.gdb"
arcpy.FeatureClassToShapefile_conversion(["MARTA_BUS_TRAIN_POLYGONS_0600_0900", "MARTA_BUS_TRAIN_POLYGONS_0900_1600","MARTA_BUS_TRAIN_POLYGONS_1600_1900","MARTA_BUS_TRAIN_POLYGONS_1900_2400"],"C:\Users\Taylor Gibbs\Documents\ATL_TRANSIT")

#FOR STREETCAR STOPS
env.workspace= "C:\Users\Taylor Gibbs\Documents\STREETCAR_STOPS.gdb"
arcpy.FeatureClassToShapefile_conversion(["STREETCAR_STOPS_0600_0900","STREETCAR_STOPS_0900_1600","STREETCAR_STOPS_1600_1900","STREETCAR_STOPS_1900_2300"],"C:\Users\Taylor Gibbs\Documents\ATL_TRANSIT")

#FOR STREETCAR POLYGON
env.workspace= "C:\Users\Taylor Gibbs\Documents\STREETCAR_POLYGON.gdb"
arcpy.FeatureClassToShapefile_conversion(["STREETCAR_POLYGON_0600_0900","STREETCAR_POLYGON_0900_1600","STREETCAR_POLYGON_1600_1900","STREETCAR_POLYGON_1900_2300"],"C:\Users\Taylor Gibbs\Documents\ATL_TRANSIT")

#-----------------------------------------------------------------------------------------------------------------------------------------------------------------


